import { CommonModule } from '@angular/common';
import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';
import { Router, RouterLink } from '@angular/router';
import { AuthenticationService } from '../authentication.service';

@Component({
  selector: 'app-registration',
  standalone: true,
  imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterLink],
  templateUrl: './registration.component.html',
  styleUrl: './registration.component.css'
})
export class RegistrationComponent implements OnInit {
  registrationForm!: FormGroup;
  selectedRole: string = 'customer';

  constructor(private formBuilder: FormBuilder, private authenticate: AuthenticationService, private router: Router) {}

  ngOnInit(): void {
    this.initializeForm();
  }

  initializeForm(): void {
    this.registrationForm = this.formBuilder.group({
      role: ['customer', Validators.required], // Default to 'customer'
      id: ['', Validators.required],
      name: ['', Validators.required],
      email: ['', [Validators.required, Validators.email]],
      phoneNo: ['', Validators.required],
      password: ['', Validators.required],
      address: ['', Validators.required]
    });
  }

  onRoleChange(): void {
    this.registrationForm.reset();
    this.registrationForm.patchValue({ role: this.selectedRole }); // Maintain role selection
  }

  onSubmit(): void {
    if (this.registrationForm.valid) {
      const registerMethod = this.selectedRole === 'customer' ? 'registerCustomer' : 'registerAgent';

      this.authenticate[registerMethod](this.registrationForm.value).subscribe({
        next: (data: any) => {
          localStorage.setItem('userData', JSON.stringify(data));
          console.log(`${this.selectedRole} registered successfully:`, data);
          this.router.navigate(['home']);
        },
        error: (err) => {
          console.error(`Error registering the ${this.selectedRole}:`, err);
        }
      });
    } else {
      console.log("Registration form is invalid");
    }
  }
}

<div class="container mt-1">
  <h2 class="text-center mb-4">User Registration</h2>

  <!-- Role Selection -->
  <div class="mb-3 text-center">
    <label for="roleSelection" class="form-label fw-bold">Register as:</label>
    <select id="roleSelection" class="form-select w-50 mx-auto" [(ngModel)]="selectedRole" (change)="onRoleChange()">
      <option value="customer">Customer</option>
      <option value="agent">Agent</option>
    </select>
  </div>

  <!-- Registration Form -->
  <form [formGroup]="registrationForm" (ngSubmit)="onSubmit()" class="needs-validation container bg-light border rounded border-secondary p-4">
    <h3 class="text-center">{{ selectedRole | titlecase }} Registration</h3>

    <div class="mb-3">
      <label for="id" class="form-label">{{ selectedRole | titlecase }} ID</label>
      <input type="text" id="id" class="form-control" placeholder="Enter your ID" formControlName="id">
    </div>

    <div class="mb-3">
      <label for="name" class="form-label">{{ selectedRole | titlecase }} Name</label>
      <input type="text" id="name" class="form-control" placeholder="Enter your name" formControlName="name">
    </div>

    <div class="mb-3">
      <label for="email" class="form-label">{{ selectedRole | titlecase }} Email</label>
      <input type="email" id="email" class="form-control" placeholder="Enter your email" formControlName="email">
    </div>

    <div class="mb-3">
      <label for="phoneNo" class="form-label">{{ selectedRole | titlecase }} Phone Number</label>
      <input type="text" id="phoneNo" class="form-control" placeholder="Enter your phone number" formControlName="phoneNo">
    </div>

    <div class="mb-3">
      <label for="password" class="form-label">Password</label>
      <input type="password" id="password" class="form-control" placeholder="Enter your password" formControlName="password">
    </div>

    <div class="mb-3">
      <label for="address" class="form-label">{{ selectedRole | titlecase }} Address</label>
      <input type="text" id="address" class="form-control" placeholder="Enter your address" formControlName="address">
    </div>

    <button type="submit" class="btn btn-primary w-100" [disabled]="registrationForm.invalid">
      Register as {{ selectedRole | titlecase }}
    </button>
  </form>

  <div class="text-center mt-2">
    <p>Already have an account?</p>
    <a routerLink="/login" class="btn btn-link">Login</a>
  </div>
</div>

